[package]
name = "rollup-node"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
exclude.workspace = true

[dependencies]
# alloy
alloy-chains.workspace = true
alloy-provider.workspace = true
alloy-rpc-types-engine.workspace = true
alloy-rpc-client.workspace = true
alloy-transport.workspace = true

# scroll-alloy
scroll-alloy-consensus.workspace = true
scroll-alloy-provider.workspace = true
scroll-alloy-rpc-types-engine.workspace = true

# reth
reth-cli-util = { git = "https://github.com/scroll-tech/reth.git" }
# keep this import as it is needed for correct compilation.
reth-engine-local = { git = "https://github.com/scroll-tech/reth.git", features = ["scroll-alloy-traits"] }
reth-eth-wire-types.workspace = true
reth-network.workspace = true
reth-network-peers.workspace = true
reth-node-api = { git = "https://github.com/scroll-tech/reth.git" }
reth-node-builder = { git = "https://github.com/scroll-tech/reth.git", features = ["skip-state-root-validation"] }
reth-node-core = { git = "https://github.com/scroll-tech/reth.git" }
reth-node-types = { git = "https://github.com/scroll-tech/reth.git" }
reth-primitives.workspace = true
reth-provider = { workspace = true, features = ["skip-state-root-validation"] }
reth-rpc-builder = { git = "https://github.com/scroll-tech/reth.git" }
reth-transaction-pool = { git = "https://github.com/scroll-tech/reth.git" }

# scroll
reth-scroll-chainspec.workspace = true
reth-scroll-cli = { git = "https://github.com/scroll-tech/reth.git" }
reth-scroll-engine-primitives = { git = "https://github.com/scroll-tech/reth.git" }
reth-scroll-node = { workspace = true, features = ["skip-state-root-validation"] }
reth-scroll-primitives = { workspace = true }
scroll-db = { workspace = true }
scroll-engine = { workspace = true, features = ["test-utils"] }
scroll-migration.workspace = true
scroll-network.workspace = true
scroll-wire.workspace = true

# rollup-node
rollup-node-indexer.workspace = true
rollup-node-manager.workspace = true
rollup-node-providers.workspace = true
rollup-node-watcher.workspace = true

# misc
clap = { version = "4", features = ["derive", "env"] }
eyre.workspace = true
reqwest = { version = "0.12", default-features = false }
secp256k1 = { workspace = true, features = ["global-context", "recovery"] }
tokio = { workspace = true, features = ["full"] }
tracing.workspace = true

[dev-dependencies]
# alloy
alloy-primitives = { workspace = true, default-features = false, features = ["map-foldhash"] }
alloy-rpc-types-engine.workspace = true

# reth
reth-e2e-test-utils = { git = "https://github.com/scroll-tech/reth.git" }
reth-payload-builder = { git = "https://github.com/scroll-tech/reth.git" }
reth-rpc-server-types = { git = "https://github.com/scroll-tech/reth.git" }
reth-tasks.workspace = true
reth-tracing = { git = "https://github.com/scroll-tech/reth.git" }

# misc
futures.workspace = true
reqwest.workspace = true
serde_json = { version = "1.0.94", default-features = false, features = ["alloc"] }
tokio = { workspace = true, features = ["full"] }

[features]
test-utils = [
    "reth-network/test-utils",
    "reth-node-builder/test-utils",
    "reth-primitives/test-utils",
    "reth-provider/test-utils",
    "reth-transaction-pool/test-utils",
    "scroll-engine/test-utils",
    "reth-payload-builder/test-utils",
    "reth-payload-builder/test-utils",
    "reth-scroll-node/test-utils",
    "rollup-node-watcher/test-utils",
    "scroll-db/test-utils",
    "scroll-db/test-utils",
    "rollup-node-providers/test-utils",
]
serde = [
    "alloy-primitives/serde",
    "alloy-rpc-types-engine/serde",
    "reth-eth-wire-types/serde",
    "reth-network/serde",
    "reth-scroll-primitives/serde",
    "scroll-alloy-consensus/serde",
    "scroll-alloy-rpc-types-engine/serde",
    "scroll-engine/serde",
    "scroll-network/serde",
    "scroll-wire/serde",
    "secp256k1/serde",
    "rollup-node-manager/serde",
    "alloy-chains/serde",
    "reth-transaction-pool/serde",
]

[[bin]]
name = "rollup-node"
path = "src/main.rs"
required-features = ["serde"]
