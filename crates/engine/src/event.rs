use super::ConsolidationOutcome;
use reth_scroll_primitives::ScrollBlock;
use scroll_network::BlockImportOutcome;

/// An enum representing the events that can be emitted by the engine driver.
#[derive(Debug)]
pub enum EngineDriverEvent {
    /// A new block has been generated by the engine driver.
    NewPayload(ScrollBlock),
    /// The result of attempting a block import.
    BlockImportOutcome(BlockImportOutcome),
    /// The result of attempting a chain import.
    ChainImportOutcome(ChainImportOutcome),
    /// A block derived from L1 has been consolidated.
    L1BlockConsolidated(ConsolidationOutcome),
}

/// The outcome of a chain import.
///
/// This includes the result of the final block import outcome and the chain of blocks that were
/// imported.
#[derive(Debug)]
pub struct ChainImportOutcome {
    /// The outcome of the block import.
    pub outcome: BlockImportOutcome,
    /// The chain of blocks that were imported.
    pub chain: Vec<ScrollBlock>,
}
