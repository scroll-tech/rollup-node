name: lint

on:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  clippy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@clippy
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Run clippy
        run: cargo clippy --workspace --lib --examples --tests --benches --all-features --locked
        env:
          RUSTFLAGS: -D warnings

  fmt:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: Run fmt
        run: cargo fmt --all --check

  udeps:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: taiki-e/install-action@cargo-udeps
      - name: Run udeps
        run: cargo udeps --workspace --lib --examples --tests --benches --all-features --locked
  
  zepter:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: cargo-bins/cargo-binstall@main
      - name: fetch deps
        run: |
          # Eagerly pull dependencies
          cargo metadata --format-version=1 --locked > /dev/null
      - name: run zepter
        run: |
          cargo binstall zepter --force -y --locked
          zepter run check

  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Run doc
        run: cargo docs --document-private-items
        env:
          RUSTDOCFLAGS: --cfg docsrs --show-type-layout --generate-link-to-definition --enable-index-page -Zunstable-options -D warnings

  codespell:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: codespell-project/actions-codespell@v2
        with:
          skip: "*.json"

  features:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/install-action@cargo-hack
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Run feature check
        run: cargo hack check --feature-powerset

  no_std:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        include:
          - type: wasm
            target: wasm32-unknown-unknown
            exclude: scroll-engine,scroll-wire,scroll-bridge,scroll-network,rollup-node-manager
          - type: riscv
            target: riscv32imac-unknown-none-elf
            exclude: scroll-engine,scroll-wire,scroll-bridge,scroll-network,rollup-node-manager
    steps:
      - uses: actions/checkout@v4
      - uses: rui314/setup-mold@v1
      - uses: dcarbone/install-jq-action@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Run no_std check
        run: |
          sudo apt update && sudo apt install gcc-multilib
          .github/assets/check_no_std.sh
        env:
          TARGET: ${{ matrix.target }}
          EXCLUDE: ${{ matrix.exclude }}
