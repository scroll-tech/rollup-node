name: test

on:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  unit:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      RUST_BACKTRACE: 1
    steps:
      - uses: actions/checkout@v4
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: 'nightly'
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: taiki-e/install-action@v2
        with:
          tool: nextest@0.9.98
      - name: Run unit tests
        run: cargo nextest run --all-features --workspace --locked -E '!kind(test)'

  integration:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      RUST_BACKTRACE: 1
    steps:
      - uses: actions/checkout@v4
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: 'nightly'
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: taiki-e/install-action@v2
        with:
          tool: nextest@0.9.98
      - name: Run integration tests
        run: |
          cargo nextest run --all-features --workspace --locked \
            --no-tests=pass -E 'kind(test) and not test(docker)' \
            -- --skip test_should_consolidate_to_block_15k

  integration-docker-compose:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    env:
      RUST_BACKTRACE: 1
    steps:
      - uses: actions/checkout@v4
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: "docker-integration-tests"
          cache-targets: "false"
      - uses: taiki-e/install-action@v2
        with:
          tool: nextest@0.9.98
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --allow-insecure-entitlement security.insecure
      - name: Free up disk space
        run: |
          echo "Initial disk usage:"
          df -h
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /opt/ghc || true
          sudo rm -rf /usr/local/share/boost || true
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" || true
          sudo rm -rf /usr/local/lib/android || true
          sudo rm -rf /usr/local/share/powershell || true
          sudo rm -rf /usr/share/swift || true
          sudo rm -rf /opt/hostedtoolcache || true
          echo "Disk usage after cleanup:"
          df -h
      - name: Clean Docker before tests
        run: |
          echo "Docker status before cleanup:"
          docker system df
          docker system prune -af --volumes
          echo "Docker status after cleanup:"
          docker system df
          echo "Final disk usage:"
          df -h
      - name: Run Docker Compose integration tests
        run: |
          export DOCKER_BUILDKIT=1
          export COMPOSE_DOCKER_CLI_BUILD=1
          cargo nextest run --all-features --workspace --locked \
            --no-tests=pass -E 'test(docker)' --test-threads=1
      - name: Cleanup after tests
        if: always()
        run: |
          docker compose -f tests/docker-compose.test.yml down --volumes --remove-orphans || true
          docker system prune -af --volumes
